apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    //统一资源前缀，规范资源引用
    resourcePrefix "app_"
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    flavorDimensions "default"
    productFlavors {
        //阿里云
        aliyun {
            buildConfigField("String", "BASE_URL", "\"http://47.111.20.81:80/\"")
            buildConfigField("String", "IMAGE_UPLOAD_URL", "\"http://47.111.20.81:80/\"")
            buildConfigField("String", "H5_BASE_URL", "\"http://47.111.20.81/\"")
            buildConfigField("String", "PROJECT_NAME", "\"exuedaoapp\"")
            buildConfigField("String", "H5_PROJECT_NAME", "\"exuedaoweb/\"")
        }
        //20测试服务器
        cs20 {
            buildConfigField("String", "BASE_URL", "\"http://192.168.2.20/\"")
            buildConfigField("String", "IMAGE_UPLOAD_URL", "\"http://192.168.2.20/\"")
            buildConfigField("String", "H5_BASE_URL", "\"http://192.168.2.20/\"")
            buildConfigField("String", "PROJECT_NAME", "\"exuedaoapp\"")
            buildConfigField("String", "H5_PROJECT_NAME", "\"learn/\"")
        }
        //17测试服务器
        cs17 {
            buildConfigField("String", "BASE_URL", "\"http://192.168.2.17:12002/\"")
            buildConfigField("String", "IMAGE_UPLOAD_URL", "\"http://192.168.2.17/\"")
            buildConfigField("String", "H5_BASE_URL", "\"http://192.168.2.17:8080/\"")
            buildConfigField("String", "PROJECT_NAME", "\"\"")
            buildConfigField("String", "H5_PROJECT_NAME", "\"wph5/\"")
        }
        //内江服务器
        neijiang {
            buildConfigField("String", "BASE_URL", "\"http://nginx.platform.njvtc.cn:8116/\"")
            buildConfigField("String", "IMAGE_UPLOAD_URL", "\"http://192.168.2.17/\"")
            buildConfigField("String", "H5_BASE_URL", "\"http://nginx.platform.njvtc.cn:8116/\"")
            buildConfigField("String", "PROJECT_NAME", "\"exuedaoapp\"")
            buildConfigField("String", "H5_PROJECT_NAME", "\"learn/\"")
        }

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    if (!isBuildModule.toBoolean()) {
        implementation project(':model_login')
        implementation project(':model_launch')
    } else {
        //组件独立运行时，宿主项目直接依赖基础库，避免编译错误
        implementation project(':librarybase')
    }
}
