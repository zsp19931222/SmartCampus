apply plugin: 'com.android.library'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    dataBinding {
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    flavorDimensions "default"
    productFlavors {
        //阿里云
        aliyun {
            buildConfigField("String", "BASE_URL", "\"http://47.111.20.81:80/\"")
            buildConfigField("String", "IMAGE_UPLOAD_URL", "\"http://47.111.20.81:80/\"")
            buildConfigField("String", "H5_BASE_URL", "\"http://47.111.20.81/\"")
            buildConfigField("String", "PROJECT_NAME", "\"exuedaoapp\"")
            buildConfigField("String", "H5_PROJECT_NAME", "\"exuedaoweb/\"")
        }
        //20测试服务器
        cs20 {
            buildConfigField("String", "BASE_URL", "\"http://192.168.2.20/\"")
            buildConfigField("String", "IMAGE_UPLOAD_URL", "\"http://192.168.2.20/\"")
            buildConfigField("String", "H5_BASE_URL", "\"http://192.168.2.20/\"")
            buildConfigField("String", "PROJECT_NAME", "\"exuedaoapp\"")
            buildConfigField("String", "H5_PROJECT_NAME", "\"learn/\"")
        }
        //17测试服务器
        cs17 {
            buildConfigField("String", "BASE_URL", "\"http://192.168.2.17:12002/\"")
            buildConfigField("String", "IMAGE_UPLOAD_URL", "\"http://192.168.2.17/\"")
            buildConfigField("String", "H5_BASE_URL", "\"http://192.168.2.17:8080/\"")
            buildConfigField("String", "PROJECT_NAME", "\"\"")
            buildConfigField("String", "H5_PROJECT_NAME", "\"wph5/\"")
        }
        //内江服务器
        neijiang {
            buildConfigField("String", "BASE_URL", "\"http://nginx.platform.njvtc.cn:8116/\"")
            buildConfigField("String", "IMAGE_UPLOAD_URL", "\"http://192.168.2.17/\"")
            buildConfigField("String", "H5_BASE_URL", "\"http://nginx.platform.njvtc.cn:8116/\"")
            buildConfigField("String", "PROJECT_NAME", "\"exuedaoapp\"")
            buildConfigField("String", "H5_PROJECT_NAME", "\"learn/\"")
        }

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //rxjava
    api rootProject.ext.dependencies.rxjava
    api rootProject.ext.dependencies.rxandroid
    //rx管理View的生命周期
    api(rootProject.ext.dependencies.rxlifecycle) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["rxlifecycle-components"]) {
        exclude group: 'com.android.support'
    }
    //rxbinding
    api(rootProject.ext.dependencies.rxbinding) {
        exclude group: 'com.android.support'
    }
    //rx权限请求
    api(rootProject.ext.dependencies.rxpermissions) {
        exclude group: 'com.android.support'
    }
    //network
    api rootProject.ext.dependencies.okhttp
    api rootProject.ext.dependencies.retrofit
    api rootProject.ext.dependencies["converter-gson"]
    api rootProject.ext.dependencies["adapter-rxjava"]
    api rootProject.ext.dependencies["logging-interceptor"]
    //json解析
    api rootProject.ext.dependencies.gson
    //glide图片加载库
    api(rootProject.ext.dependencies.glide) {
        exclude group: 'com.android.support'
    }
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    //recyclerview的databinding套装
    api(rootProject.ext.dependencies.bindingcollectionadapter) {
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["bindingcollectionadapter-recyclerview"]) {
        exclude group: 'com.android.support'
    }
    //Google LiveData和ViewModel组件
    api rootProject.ext.dependencies["lifecycle-extensions"]
    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
    //popupwindow
    api rootProject.ext.dependencies.popupwindow
    //toast
    api rootProject.ext.dependencies.toast

    //消息总线
    api rootProject.ext.dependencies.eventBus
    //multidex分包
    api rootProject.ext.dependencies.multidex
    //ARouter
    api rootProject.ext.dependencies.arouter
    //常用工具类
    api rootProject.ext.dependencies.utilcode
//    //常用工具类
//    api rootProject.ext.dependencies.mvvmlight
}
